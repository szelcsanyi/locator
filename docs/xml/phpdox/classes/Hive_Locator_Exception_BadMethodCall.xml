<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Hive\Locator\Exception\BadMethodCall" namespace="Hive\Locator\Exception" name="BadMethodCall" abstract="false" final="false" start="17" end="44">
  <file path="/usr/local/zend/var/apps/http/vendor.dev/vendor/hive/locator/build/../source/Exception" file="BadMethodCall.php" realpath="/usr/local/zend/var/apps/http/vendor.dev/vendor/hive/locator/source/Exception/BadMethodCall.php" size="1216" time="2019-04-15T14:26:02+11:00" unixtime="1555298762" sha1="afc5f84a05e92c0daa0fedbf6435149c7df3b72e" relative="Exception/BadMethodCall.php"/>
  <docblock>
    <description compact="Bad Method Call Exception.">Attempted to call a method which does not exist.
This Exception exists to handle invalid calls with in __call()</description>
    <author value="Jamie Peake &lt;jamie.peake@gmail.com&gt;"/>
    <licence value="https://github.com/hive/locator/blob/master/LICENSE (BSD-3-Clause)"/>
    <package value="Hive"/>
    <subpackage value="Locator"/>
    <copyright value="(c) 2017 Jamie Peake"/>
  </docblock>
  <extends full="Hive\Locator\Exception" namespace="Hive\Locator" name="Exception"/>
  <constant type="integer" name="CODE" value="3">
    <docblock>
      <description compact="Exception code, sequential exception numbers."/>
    </docblock>
  </constant>
  <constant type="string" name="MESSAGE" value="'Call to undefined method :class:::method()'">
    <docblock>
      <description compact="Exception Message to be displayed."/>
    </docblock>
  </constant>
  <constructor name="__construct" start="36" end="43" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Bd Method Call constructor, assigns exception code the message.">Will also place the name of the class into the exception message if we have it.</description>
      <param description="the class which was called" type="string" variable="$class"/>
      <param description="the method which doesn't exist" type="string" variable="$method"/>
    </docblock>
    <parameter name="class" byreference="false" type="{unknown}"/>
    <parameter name="method" byreference="false" type="{unknown}"/>
  </constructor>
  <parent full="Hive\Locator\Exception" namespace="Hive\Locator" name="Exception">
    <extends full="Exception" namespace="" name="Exception"/>
    <constant type="{unknown}" name="VENDOR_NUMBER" value="8383">
      <docblock>
        <description compact="Arbitrarily assigned vendor exception code used to prefix all hive exceptions."/>
      </docblock>
    </constant>
    <constant type="{unknown}" name="PACKAGE_NUMBER" value="5">
      <docblock>
        <description compact="Package exception code, sequential package numbers."/>
      </docblock>
    </constant>
    <constructor name="__construct" start="39" end="43" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Exception constructor, assigns the message and code and calls the exception handler.">It will prepend the error code with the vendor code, package code and exception code,
so that we have a unique exception code.</description>
        <param description="The exceptions message." type="object" variable="$message">
          <type full="Hive\Locator\null|string" namespace="Hive\Locator" name="null|string"/>
        </param>
        <param description="The exception code." type="object" variable="$code">
          <type full="Hive\Locator\null|int" namespace="Hive\Locator" name="null|int"/>
        </param>
      </docblock>
      <parameter name="message" byreference="false" type="{unknown}" default="" constant="null"/>
      <parameter name="code" byreference="false" type="{unknown}" default="" constant="null"/>
      <inline>
        <comment value="Call the parent with the message and our now unique error code" line="41"/>
      </inline>
    </constructor>
  </parent>
  <parent full="Exception" namespace="" name="Exception">
    <member name="message" static="false" visibility="protected">
    <default>null</default>
    <docblock>
      <description compact="The exception message"/>
      <var type="string"/>
    </docblock>
  </member>
    <member name="code" static="false" visibility="protected">
    <default>null</default>
    <docblock>
      <description compact="The exception code"/>
      <var type="int"/>
    </docblock>
  </member>
    <member name="file" static="false" visibility="protected">
    <default>null</default>
    <docblock>
      <description compact="The filename where the exception was created"/>
      <var type="string"/>
    </docblock>
  </member>
    <member name="line" static="false" visibility="protected">
    <default>null</default>
    <docblock>
      <description compact="The line where the exception was created"/>
      <var type="int"/>
    </docblock>
  </member>
    <constructor name="__construct" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Construct the exception"/>
      <return type="void"/>
    </docblock>
    <parameter name="message" optional="true" byreference="false" type="string"/>
    <parameter name="code" optional="true" byreference="false" type="int"/>
    <parameter name="previous" optional="true" byreference="false" type="object" class="Exception"/>
  </constructor>
    <method name="getMessage" abstract="false" static="false" visibility="public" final="true">
    <docblock>
      <description compact="Gets the Exception message"/>
      <return type="string"/>
    </docblock>
  </method>
    <method name="getPrevious" abstract="false" static="false" visibility="public" final="true">
    <docblock>
      <description compact="Returns previous Exception"/>
      <return type="Exception"/>
    </docblock>
  </method>
    <method name="getCode" abstract="false" static="false" visibility="public" final="true">
    <docblock>
      <description compact="Gets the Exception code"/>
      <return type="mixed"/>
    </docblock>
  </method>
    <method name="getFile" abstract="false" static="false" visibility="public" final="true">
    <docblock>
      <description compact="Gets the file in which the exception occurred"/>
      <return type="string"/>
    </docblock>
  </method>
    <method name="getLine" abstract="false" static="false" visibility="public" final="true">
    <docblock>
      <description compact="Gets the line in which the exception occurred"/>
      <return type="int"/>
    </docblock>
  </method>
    <method name="getTrace" abstract="false" static="false" visibility="public" final="true">
    <docblock>
      <description compact="Gets the stack trace"/>
      <return type="array"/>
    </docblock>
  </method>
    <method name="getTraceAsString" abstract="false" static="false" visibility="public" final="true">
    <docblock>
      <description compact="Gets the stack trace as a string"/>
      <return type="string"/>
    </docblock>
  </method>
    <method name="__toString" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="String representation of the exception"/>
      <return type="string"/>
    </docblock>
  </method>
  </parent>
</class>
