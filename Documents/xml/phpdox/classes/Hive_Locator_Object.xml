<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Hive\Locator\Object" namespace="Hive\Locator" name="Object" abstract="false" final="false" start="17" end="240">
  <file path="/usr/local/zend/var/apps/http/vendor/hive/locator/Build/../Source" file="Object.php" realpath="/usr/local/zend/var/apps/http/vendor/hive/locator/Source/Object.php" size="7179" time="2017-01-11T19:23:33+11:00" unixtime="1484123013" sha1="3d9c13316494cbec7673f447d53f84a6b91e0127" relative="Object.php"/>
  <docblock>
    <description compact="Object Library.">Allows access to the library through an object and adds the ability to call aliases, legends and current.
Which can be called either through properties or methods. Also adds the ability to access other items with in the map.</description>
    <author value="Jamie Peake &lt;jamie.peake@gmail.com&gt;"/>
    <licence value="https://github.com/hive/locator/blob/master/LICENSE (BSD-3-Clause)"/>
    <package value="Hive"/>
    <subpackage value="Locator"/>
    <copyright value="(c) 2017 Jamie Peake"/>
  </docblock>
  <extends full="Hive\Locator\Library" namespace="Hive\Locator" name="Library"/>
  <implements full="Hive\Locator\Contract\Object" namespace="Hive\Locator\Contract" name="Object"/>
  <member name="config" type="array" default="" visibility="private" static="false" line="31">
    <docblock>
      <description compact="Default configuration settings."/>
      <var description="config default object configuration for the library." type="array"/>
      <var description="['legend'] : array : Legend used to create the map, ie. what to call each of the array keys (in order)" type="array"/>
      <var description="['aliases'] : array : Alias to the legend as methods $environment-&gt;in('staging'); $environment-&gt;is('domain.com.au');" type="array"/>
      <var description="['driver'] : string|object : The driver which will compare our value to see if it is a match" type="array"/>
      <var description="['current'] : array : Allow access to the current result from these names;" type="array"/>
      <var description="['access'] : array : Whether to allow access to the result through method calls, property calls or a 'current'." type="array"/>
      <var description="['current'] : array : Any names which to allow access to the current result." type="array"/>
    </docblock>
  </member>
  <constructor name="__construct" start="48" end="55" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Object constructor.">Merge the object config with the libraries</description>
      <param type="array" variable="$map"/>
      <param type="array" variable="$config"/>
    </docblock>
    <parameter name="map" byreference="false" type="array"/>
    <parameter name="config" byreference="false" type="array" default=""/>
    <inline>
      <comment value="Merge the received config with the defaults" line="51"/>
    </inline>
  </constructor>
  <method name="__get" start="68" end="82" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Will allow access to the result through properties.">Allows access to the result, through property calls on the object,
depending on config, it can allow access via the legend, current or alias.</description>
      <param variable="$name"/>
      <return type="object">
        <type full="Hive\Locator\bool|object" namespace="Hive\Locator" name="bool|object"/>
      </return>
      <throws type="object">
        <type full="Hive\Locator\Exception\UndefinedProperty" namespace="Hive\Locator\Exception" name="UndefinedProperty"/>
      </throws>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="If magic properties are turned on" line="70"/>
      <comment value="Throw a Bad Method call as the method wasn't found." line="80"/>
    </inline>
  </method>
  <method name="__call" start="100" end="124" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Will allow access to the result through a method call.">Allows access to the result through a method call on the object, depending on the config.
It can allow access via the legend, current or alias. To enable, ensure that 'method is with in Config['access'].

If an argument is sent to, it will compare the argument with the result and return a true/false boolean.</description>
      <param variable="$name"/>
      <param variable="$arguments"/>
      <return type="object">
        <type full="Hive\Locator\bool|object" namespace="Hive\Locator" name="bool|object"/>
      </return>
      <throws type="object">
        <type full="Hive\Locator\Exception\BadMethodCall" namespace="Hive\Locator\Exception" name="BadMethodCall"/>
      </throws>
      <throws type="object">
        <type full="Hive\Locator\Exception\UnresolvedLegend" namespace="Hive\Locator\Exception" name="UnresolvedLegend"/>
      </throws>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}"/>
    <parameter name="arguments" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="If magic methods are turned on" line="103"/>
      <comment value="Throw a Bad Method call as the method wasn't found." line="121"/>
    </inline>
  </method>
  <method name="magic" start="135" end="172" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="Method used to find items from their legend, alias or current."/>
      <param variable="$name"/>
      <return type="object">
        <type full="Hive\Locator\bool|object" namespace="Hive\Locator" name="bool|object"/>
      </return>
      <throws type="object">
        <type full="Hive\Locator\Exception\UnresolvedLegend" namespace="Hive\Locator\Exception" name="UnresolvedLegend"/>
      </throws>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="Make sure we have a result" line="138"/>
    </inline>
  </method>
  <method name="get" start="184" end="238" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Will get the value of items other then the current.">Does a fuzzy search, based upon the parameters, any which are sent in as config['current'] it will use the current result.</description>
      <return type="object">
        <type full="\stdClass" namespace="" name="stdClass"/>
      </return>
      <throws type="object">
        <type full="Hive\Locator\Exception\UndefinedMapping" namespace="Hive\Locator\Exception" name="UndefinedMapping"/>
      </throws>
      <throws type="object">
        <type full="Hive\Locator\Exception\UnresolvedLegend" namespace="Hive\Locator\Exception" name="UnresolvedLegend"/>
      </throws>
    </docblock>
    <inline>
      <comment value="Make sure we have a result" line="187"/>
    </inline>
  </method>
  <parent full="Hive\Locator\Library" namespace="Hive\Locator" name="Library">
    <implements full="Hive\Locator\Contract\Library" namespace="Hive\Locator\Contract" name="Library"/>
    <constant type="{unknown}" name="DRIVER_CONTRACT" value="'Hive\Locator\Contract\Driver'">
      <docblock>
        <description compact="Contract which a driver must implement. (Magic Value)"/>
      </docblock>
    </constant>
    <member name="map" type="array" default="" visibility="public" static="false" line="34">
      <docblock>
        <description compact="The array or 'map' upon which to parse"/>
        <var description="Must be an associative array" type="array"/>
      </docblock>
    </member>
    <member name="status" type="boolean" default="false" visibility="public" static="false" line="51">
      <docblock>
        <description compact="Status of whether or not we have found a result"/>
        <var type="object">
          <type full="Hive\Locator\bool" namespace="Hive\Locator" name="bool"/>
        </var>
      </docblock>
    </member>
    <member name="result" type="array" default="" visibility="public" static="false" line="58">
      <docblock>
        <description compact="The result of the map/legend, used while we build it up."/>
        <var type="array"/>
      </docblock>
    </member>
    <member name="driver" type="boolean" default="false" visibility="protected" static="false" line="64">
      <docblock>
        <description compact="Comparison driver object"/>
        <var type="object">
          <type full="Hive\Locator\bool|object" namespace="Hive\Locator" name="bool|object"/>
        </var>
      </docblock>
    </member>
    <constructor name="__construct" start="80" end="99" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Let the magic begin, assign our map and set our configuration"/>
        <throws type="object">
          <type full="Hive\Locator\Exception\InvalidDriver" namespace="Hive\Locator\Exception" name="InvalidDriver"/>
        </throws>
        <param description="The actual environment mapping" type="array" variable="$map"/>
        <param description="Configuration settings for this class" type="array" variable="$config"/>
      </docblock>
      <parameter name="map" byreference="false" type="array"/>
      <parameter name="config" byreference="false" type="array" default=""/>
      <inline>
        <comment value="Map needs to be defined on creation." line="83"/>
        <comment value="Merge the received config with the defaults" line="86"/>
        <comment value="Create the driver object if it hasn't been created already" line="89"/>
        <comment value="Gigo Check that the driver implements the driver interface" line="94"/>
      </inline>
    </constructor>
    <method name="resolve" start="108" end="127" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Takes a subject and resolves it against the legend, returns the map information as a result"/>
        <param description="the subject to search the map for and assign the result" type="mixed" variable="$subject"/>
        <return description="of the result, with correct map assigned or false if it doesn't exist" type="object">
          <type full="\stdClass" namespace="" name="stdClass"/>
        </return>
      </docblock>
      <parameter name="subject" byreference="false" type="{unknown}"/>
      <inline>
        <comment value="Reset the status to false, as we are about the parse a new value" line="110"/>
        <comment value="Assign the subject to search for" line="113"/>
        <comment value="Parse the map" line="116"/>
      </inline>
    </method>
  </parent>
  <interface full="Hive\Locator\Contract\Library" namespace="Hive\Locator\Contract" name="Library">
    <method name="resolve" start="25" end="25" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Resolves a subject against the internal map, returning the legend for the object"/>
      <param variable="$subject"/>
      <return description="a object of the subjects legend values." type="object">
        <type full="\stdClass" namespace="" name="stdClass"/>
      </return>
    </docblock>
    <parameter name="subject" byreference="false" type="{unknown}"/>
  </method>
  </interface>
  <interface full="Hive\Locator\Contract\Object" namespace="Hive\Locator\Contract" name="Object">
    <extends full="Hive\Locator\Contract\Library" namespace="Hive\Locator\Contract" name="Library"/>
  </interface>
</class>
