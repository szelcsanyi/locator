<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Hive\Locator\Library" namespace="Hive\Locator" name="Library" abstract="false" final="false" start="20" end="186">
  <file path="/usr/local/zend/var/apps/http/vendor/hive/locator/Build/../Source" file="Library.php" realpath="/usr/local/zend/var/apps/http/vendor/hive/locator/Source/Library.php" size="5567" time="2017-01-20T23:59:19+11:00" unixtime="1484917159" sha1="484e5dad5f2232a4687f9181123df9a00779f36b" relative="Library.php"/>
  <docblock>
    <description compact="Locator Library.">The actual Locator library, which does the core operations.</description>
    <author value="Jamie Peake &lt;jamie.peake@gmail.com&gt;"/>
    <licence value="https://github.com/hive/locator/blob/master/LICENSE (BSD-3-Clause)"/>
    <package value="Hive"/>
    <subpackage value="Locator"/>
    <copyright value="(c) 2017 Jamie Peake"/>
  </docblock>
  <implements full="Hive\Locator\Contract\Library" namespace="Hive\Locator\Contract" name="Library"/>
  <constant type="string" name="DRIVER_CONTRACT" value="'Hive\Locator\Contract\Driver'">
    <docblock>
      <description compact="Contract which a driver must implement. (Magic Value)"/>
    </docblock>
  </constant>
  <member name="map" type="array" default="" visibility="public" static="false" line="34">
    <docblock>
      <description compact="The array or 'map' upon which to parse"/>
      <var description="Must be an associative array" type="array"/>
    </docblock>
  </member>
  <member name="config" type="array" default="" visibility="private" static="false" line="42">
    <docblock>
      <description compact="Default configuration settings."/>
      <var description="['legend'] : array : Legend used to create the map, ie. what to call each of the array keys (in order)" type="array"/>
      <var description="['aliases'] : array : Alias to the legend as methods $environment-&gt;in('staging'); $environment-&gt;is('domain.com.au');" type="array"/>
      <var description="['driver'] : s108tring|object : The driver which will compare our value to see if it is a match" type="array"/>
    </docblock>
  </member>
  <member name="status" type="boolean" default="false" visibility="public" static="false" line="51">
    <docblock>
      <description compact="Status of whether or not we have found a result"/>
      <var type="object">
        <type full="Hive\Locator\bool" namespace="Hive\Locator" name="bool"/>
      </var>
    </docblock>
  </member>
  <member name="result" type="array" default="" visibility="public" static="false" line="58">
    <docblock>
      <description compact="The result of the map/legend, used while we build it up."/>
      <var type="array"/>
    </docblock>
  </member>
  <member name="driver" type="boolean" default="false" visibility="protected" static="false" line="64">
    <docblock>
      <description compact="Comparison driver object"/>
      <var type="object">
        <type full="Hive\Locator\bool|object" namespace="Hive\Locator" name="bool|object"/>
      </var>
    </docblock>
  </member>
  <member name="subject" type="boolean" default="false" visibility="private" static="false" line="70">
    <docblock>
      <description compact="The item to look for."/>
      <var type="string"/>
    </docblock>
  </member>
  <constructor name="__construct" start="80" end="99" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Let the magic begin, assign our map and set our configuration"/>
      <throws type="object">
        <type full="Hive\Locator\Exception\InvalidDriver" namespace="Hive\Locator\Exception" name="InvalidDriver"/>
      </throws>
      <param description="The actual environment mapping" type="array" variable="$map"/>
      <param description="Configuration settings for this class" type="array" variable="$config"/>
    </docblock>
    <parameter name="map" byreference="false" type="array"/>
    <parameter name="config" byreference="false" type="array" default=""/>
    <inline>
      <comment value="Map needs to be defined on creation." line="83"/>
      <comment value="Merge the received config with the defaults" line="86"/>
      <comment value="Create the driver object if it hasn't been created already" line="89"/>
      <comment value="Gigo Check that the driver implements the driver interface" line="94"/>
    </inline>
  </constructor>
  <method name="resolve" start="108" end="127" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Takes a subject and resolves it against the legend, returns the map information as a result"/>
      <param description="the subject to search the map for and assign the result" type="mixed" variable="$subject"/>
      <return description="of the result, with correct map assigned or false if it doesn't exist" type="object">
        <type full="\stdClass" namespace="" name="stdClass"/>
      </return>
    </docblock>
    <parameter name="subject" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="Reset the status to false, as we are about the parse a new value" line="110"/>
      <comment value="Assign the subject to search for" line="113"/>
      <comment value="Parse the map" line="116"/>
    </inline>
  </method>
  <method name="parse" start="144" end="184" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="Parse the map, using the legend it returns the location of the array."/>
      <todo value="to be moved the array helper (when written) : array::locate"/>
      <recursive/>
      <throws type="object">
        <type full="\Hive\Locator\Exception\IncompleteLegend" namespace="\Hive\Locator\Exception" name="IncompleteLegend"/>
      </throws>
      <param description="the array to parse looking for a values location" type="array" variable="$data"/>
      <param description="private value used as a internal pointer of the data for the recursive method" type="int" variable="$depth"/>
      <return type="object">
        <type full="Hive\Locator\bool" namespace="Hive\Locator" name="bool"/>
      </return>
    </docblock>
    <parameter name="data" byreference="false" type="{unknown}"/>
    <parameter name="depth" byreference="false" type="integer" default="0"/>
    <inline>
      <comment value="Assign the current alias and increment depth" line="147"/>
      <comment value="Gigo check, ensure that there is an alias for the map." line="150"/>
      <comment value="these are not the androids you are looking for." line="182"/>
    </inline>
  </method>
  <interface full="Hive\Locator\Contract\Library" namespace="Hive\Locator\Contract" name="Library">
    <method name="resolve" start="25" end="25" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Resolves a subject against the internal map, returning the legend for the object"/>
      <param variable="$subject"/>
      <return description="a object of the subjects legend values." type="object">
        <type full="\stdClass" namespace="" name="stdClass"/>
      </return>
    </docblock>
    <parameter name="subject" byreference="false" type="{unknown}"/>
  </method>
  </interface>
</class>
